(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();const l=()=>{const r=document.querySelector(".modal--welcome"),e=document.querySelector(".modal-thanks"),s=document.querySelector(".header__welcome-text"),n=document.querySelector(".modal__form"),t=document.querySelector("[data-modal-overlay]"),i=localStorage.getItem("userName");i||(r.classList.remove("is-hidden"),t.classList.remove("is-hidden")),document.querySelectorAll("[data-modal-close]").forEach(o=>{o.addEventListener("click",()=>{const a=o.closest(".modal");d(a,t)})}),i?s.textContent=`Вітаємо,  ${i}!`:c(r,t),document.addEventListener("keydown",o=>{o.key==="Escape"&&d(r,t)}),t.addEventListener("click",()=>{d(r,t),d(e,t)}),s.addEventListener("click",()=>{c(r,t)}),n.addEventListener("submit",o=>{o.preventDefault();const a=n.querySelector(".modal-input").value.trim();if(!/^[a-zA-Zа-яА-ЯёЁ]{4,20}$/.test(a)){alert("Введіть нікнейм від 4 до 20 символів без викростання спеціальних символів");return}localStorage.setItem("userName",a),s.textContent=`Вітаємо, ${a}!`,d(r,t),c(e,t)})},c=(r,e)=>{r.classList.remove("is-hidden"),document.body.style.overflow="hidden",e.classList.remove("is-hidden")},d=(r,e)=>{r.classList.add("is-hidden"),document.body.style.overflow="",e.classList.add("is-hidden")},u=()=>{document.querySelectorAll(".header__nav-item").forEach(r=>{const e=r.querySelector(".header__nav-link"),s=r.querySelector(".header__dropdown");e.addEventListener("click",n=>{n.preventDefault();const t=s.classList.contains("active");document.querySelectorAll(".dropdown").forEach(i=>i.classList.remove("active")),t||s.classList.add("active")})})};class m{constructor(){this.form=document.querySelector("[data-biggNum-form]"),this.result=document.querySelector("[data-biggNum-result]"),this.inputs=document.querySelectorAll("[data-biggNum-input]")}init(){if(!this.form||!this.result||this.inputs.length===0){console.error("Form, result element, or input not found.");return}this.form.addEventListener("submit",e=>{e.preventDefault();const s=Array.from(this.inputs).map(t=>parseFloat(t.value));if(s.some(isNaN)){this.result.textContent="Будь ласка, введіть коректні числа у всі поля";return}const n=Math.max(...s);this.result.textContent=`Найбільше число, яке ви ввели - ${n}`})}}class h{constructor(){this.scientists=[{name:"Albert",surname:"Einstein",born:1879,dead:1955,id:1},{name:"Isaac",surname:"Newton",born:1643,dead:1727,id:2},{name:"Galileo",surname:"Galilei",born:1564,dead:1642,id:3},{name:"Marie",surname:"Curie",born:1867,dead:1934,id:4},{name:"Johannes",surname:"Kepler",born:1571,dead:1630,id:5},{name:"Nicolaus",surname:"Copernicus",born:1473,dead:1543,id:6},{name:"Max",surname:"Planck",born:1858,dead:1947,id:7},{name:"Katherine",surname:"Blodgett",born:1898,dead:1979,id:8},{name:"Ada",surname:"Lovelace",born:1815,dead:1852,id:9},{name:"Sarah E.",surname:"Goode",born:1855,dead:1905,id:10},{name:"Lise",surname:"Meitner",born:1878,dead:1968,id:11},{name:"Hanna",surname:"Hammarström",born:1829,dead:1909,id:12}],this.btns=document.querySelectorAll("[data-scientists-btn]"),this.list=document.querySelector("[data-scientist-list]")}init(){this.renderScientists(this.scientists),this.btns.forEach(e=>{e.addEventListener("click",()=>{const s=e.dataset.scientistsBtn;let n=[];switch(s){case"1":n=this.filterByBornIn19thCentury();break;case"2":n=this.sortByName();break;case"3":n=this.sortByAge();break;case"4":n=[this.findYoungestScientist()];break;case"5":n=[this.scientists[0]];break;case"6":n=this.filterBySurnameStartingWith("C");break;case"7":n=this.filterByNameNotStartingWith("A");break;case"8":n=this.findOldestAndYoungestScientists();break;case"9":n=this.filterByMatchingInitials();break;default:console.log("Please choose a valid button.");return}this.renderScientists(n)})})}filterByBornIn19thCentury(){return this.scientists.filter(e=>e.born>1801&&e.born<1900)}sortByName(){return[...this.scientists].sort((e,s)=>e.name.localeCompare(s.name))}sortByAge(){return[...this.scientists].sort((e,s)=>e.dead-e.born-(s.dead-s.born))}findYoungestScientist(){return this.scientists.reduce((e,s)=>s.born>e.born?s:e)}filterBySurnameStartingWith(e){return this.scientists.filter(s=>s.surname.startsWith(e))}filterByNameNotStartingWith(e){return this.scientists.filter(s=>!s.name.startsWith(e))}findOldestAndYoungestScientists(){const e=this.scientists.reduce((n,t)=>t.dead-t.born>n.dead-n.born?t:n),s=this.scientists.reduce((n,t)=>t.dead-t.born<n.dead-n.born?t:n);return[e,s]}filterByMatchingInitials(){return this.scientists.filter(e=>e.name[0]===e.surname[0])}renderScientists(e){this.list.innerHTML="",e.forEach(s=>{const n=document.createElement("li");n.classList.add("scientists__item"),n.innerHTML=`<p>${s.name} ${s.surname} <br /> ${s.born}-${s.dead}</p>`,this.list.appendChild(n)})}}document.addEventListener("DOMContentLoaded",()=>{new m().init(),new h().init(),l(),u()});
//# sourceMappingURL=index-DVj_rgnz.js.map
